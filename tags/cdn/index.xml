<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CDN on 白菜</title><link>https://blog.baicai.me/tags/cdn/</link><description>Recent content in CDN on 白菜</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>baicai.me</copyright><lastBuildDate>Fri, 02 Jul 2021 23:50:06 +0800</lastBuildDate><atom:link href="https://blog.baicai.me/tags/cdn/index.xml" rel="self" type="application/rss+xml"/><item><title>免费CDN：jsDelivr+Github 使用方法</title><link>https://blog.baicai.me/article/2021/jsdelivr_github/</link><pubDate>Fri, 02 Jul 2021 23:50:06 +0800</pubDate><guid>https://blog.baicai.me/article/2021/jsdelivr_github/</guid><description>&lt;p>CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。&lt;/p>
&lt;h3 id="用-jsdelivr-免费cdn托管静态资源">用 jsDelivr 免费CDN托管静态资源&lt;/h3>
&lt;p>国内的免费 CDN 不少，但需要备案
国外的免费 CDN 也不少，但在国内速度慢
但 jsDelivr 是一个特殊的存在，虽然是一家国外 CDN 但是有国内节点&lt;/p>
&lt;p>jsDelivr官网： &lt;a href="https://www.jsdelivr.com">https://www.jsdelivr.com&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>放在Github的资源在国内加载速度比较慢，因此需要使用CDN加速来优化网站打开速度，jsDelivr + Github便是免费且好用的CDN，非常适合博客网站使用。&lt;/p>
&lt;/blockquote>
&lt;h3 id="使用步骤">使用步骤&lt;/h3>
&lt;p>1、新建Github仓库&lt;/p>
&lt;p>2、克隆Github仓库到本地&lt;/p>
&lt;p>执行以下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git clone 一键复制的仓库地址
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>3、上传资源&lt;/p>
&lt;p>复制需要上传的资源到本地git仓库（注：jsDelivr不支持加载超过20M的资源），在本地git仓库目录下，执行以下命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git status &lt;span style="color:#75715e">#查看状态&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git add . &lt;span style="color:#75715e">#添加所有文件到暂存区&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git commit -m &lt;span style="color:#e6db74">&amp;#39;第一次提交&amp;#39;&lt;/span> &lt;span style="color:#75715e">#把文件提交到仓库&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push &lt;span style="color:#75715e">#推送至远程仓库&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>4、发布仓库&lt;/p>
&lt;p>点击release发布&lt;/p>
&lt;p>自定义发布版本号
5、通过jsDelivr引用资源&lt;/p>
&lt;p>使用方法：&lt;code>https://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径&lt;/code>
例如：&lt;/p>
&lt;pre>&lt;code>https://cdn.jsdelivr.net/gh/baicaime/meBlog/index.html
https://cdn.jsdelivr.net/gh/baicaime/meBlog/favicon-16x16.png
https://cdn.jsdelivr.net/gh/clin003/cdn/v@3.1.3/css.css
&lt;/code>&lt;/pre>
&lt;p>注意：版本号不是必需的，是为了区分新旧资源，如果不使用版本号，将会直接引用最新资源，除此之外还可以使用某个范围内的版本，查看所有资源等，具体使用方法如下：&lt;/p>
&lt;pre>&lt;code>// 加载任何Github发布、提交或分支
https://cdn.jsdelivr.net/gh/user/repo@version/file
// 加载 jQuery v3.2.1
https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/dist/jquery.min.js
// 使用版本范围而不是特定版本
https://cdn.jsdelivr.net/gh/jquery/jquery@3.2/dist/jquery.min.js
https://cdn.jsdelivr.net/gh/jquery/jquery@3/dist/jquery.min.js
// 完全省略该版本以获取最新版本
https://cdn.jsdelivr.net/gh/jquery/jquery/dist/jquery.min.js
// 将“.min”添加到任何JS/CSS文件中以获取缩小版本，如果不存在，将为会自动生成
https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/src/core.min.js
// 在末尾添加 / 以获取资源目录列表
https://cdn.jsdelivr.net/gh/jquery/jquery/
// 刷新cnd资源 将域名中的 cdn 改为 purge 即可
https://purge.jsdelivr.net/gh/baicaime/meBlog/index.html
// 使用最新版本资源
https://purge.jsdelivr.net/gh/baicaime/meBlog@latest/index.html
&lt;/code>&lt;/pre></description></item></channel></rss>